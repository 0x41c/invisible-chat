'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _moduleLoader = require('./moduleLoader');

var _moduleLoader2 = _interopRequireDefault(_moduleLoader);

var _convention = require('./convention');

var _convention2 = _interopRequireDefault(_convention);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BaseActLoader = function () {
    function BaseActLoader() {
        var moduleLoader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _moduleLoader2.default();
        var convention = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _convention2.default();
        var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _path2.default;

        _classCallCheck(this, BaseActLoader);

        this._moduleLoader = moduleLoader;
        this._convention = convention;
        this._path = path;
    }

    _createClass(BaseActLoader, [{
        key: 'loadForSuite',
        value: function loadForSuite(lastAct, suiteModulePath) {
            var lastActType = typeof lastAct === 'undefined' ? 'undefined' : _typeof(lastAct);
            if (lastActType === 'function') {
                return lastAct;
            } else if (lastActType === 'string') {

                var joinPath = this._path.join,
                    dirname = this._path.dirname;

                var baseActPath = joinPath(dirname(suiteModulePath), lastAct);

                return this._moduleLoader.load(baseActPath);
            } else {

                var _baseActPath = this._convention.getSuiteBasePath(suiteModulePath);

                return this._moduleLoader.load(_baseActPath);
            }
        }
    }, {
        key: 'loadForAct',
        value: function loadForAct(act) {
            if (act.base) {
                var joinPath = this._path.join,
                    dirname = this._path.dirname;

                var baseActPath = joinPath(dirname(act.path), act.base);

                return this._moduleLoader.load(baseActPath);
            } else if (!this._isDefinedInOwnFile(act)) {
                return undefined;
            } else {
                var _baseActPath2 = this._convention.getActBasePath(act.path);
                if (_baseActPath2) //FIXME not tested
                    return this._moduleLoader.load(_baseActPath2);
            }
        }
    }, {
        key: '_isDefinedInOwnFile',
        value: function _isDefinedInOwnFile(act) {
            return !!act.path;
        }
    }]);

    return BaseActLoader;
}();

exports.default = BaseActLoader;
//# sourceMappingURL=baseActLoader.js.map
{"version":3,"sources":["../../src/assert/assertThrows.js"],"names":["reporter","require","default","assert","trimStackTrace","_throws","throws","module","exports","title","block","error","err","expectedText","actualText","AssertionError","setActualText","actual","fail","ok","stack","undefined"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,aAAR,EAAuBC,OAAtC;;AAEA,IAAIC,SAASF,QAAQ,QAAR,CAAb;AACA,IAAIG,iBAAiBH,QAAQ,kBAAR,CAArB;AACA,IAAII,UAAUF,OAAOG,MAArB;;AAEAC,OAAOC,OAAP,GAAiB,UAASC,KAAT,EAAeC,KAAf,EAAqBC,KAArB,EAA4B;AAC3C,KAAI;AACHN,UAAQK,KAAR,EAAeC,KAAf;AACA,EAFD,CAGA,OAAOC,GAAP,EAAY;AACV,MAAIC,eAAe,qBAAqBF,KAAxC;AACA,MAAIG,UAAJ;AACD,MAAGF,eAAeT,OAAOY,cAAzB,EAAyC;AACxCC,iBAAcJ,IAAIK,MAAlB;AACA,GAFD,MAICD,cAAcJ,GAAd;AACAZ,WAASkB,IAAT,CAAcT,KAAd,EAAoBI,YAApB,EAAkCC,UAAlC;AACA;AACD;AACDd,UAASmB,EAAT,CAAYV,KAAZ;;AAEA,UAASO,aAAT,CAAuBJ,GAAvB,EAA4B;AAC1B,MAAI,CAACA,GAAL,EAAU;AACTE,gBAAa,qBAAb;AACA;AACA;AACDA,eAAa,WAAb;AACD,MAAGF,IAAIQ,KAAJ,IAAaC,SAAhB,EACCP,cAAcF,GAAd,CADD,KAGCE,cAAcV,eAAeQ,GAAf,CAAd;AACD;AACF,CA5BD","file":"assertThrows.js","sourcesContent":["var reporter = require('../reporter').default;\n\nvar assert = require('assert');\nvar trimStackTrace = require('./trimStackTrace');\nvar _throws = assert.throws;\n\nmodule.exports = function(title,block,error) {\n\t try {\t\t\n\t \t_throws(block, error);\t \t\n\t } \t \n\t catch (err) {\t \t\t \t\n\t \t\tvar expectedText = 'Expected error: ' + error;\t\t\t\n\t \t\tvar actualText;\t\n\t\t\tif(err instanceof assert.AssertionError) {\n\t\t\t\tsetActualText(err.actual);\t\t\t\n\t\t\t}\n\t\t\telse \n\t\t\t\tsetActualText(err);\t\t\t\t\t\t\n\t \t\treporter.fail(title,expectedText, actualText);\n\t \t\treturn;\n\t }\n\t reporter.ok(title);\t\n\n\t function setActualText(err) {\n\t \t\tif (!err) {\n\t \t\t\tactualText = 'but none was thrown';\n\t \t\t\treturn;\t \t\t\t\n\t \t\t}\t \t\t\n\t \t\tactualText = 'but was: '\n\t\t\tif(err.stack == undefined) \n\t\t\t\tactualText += err;\n\t\t\telse \n\t\t\t\tactualText += trimStackTrace(err);\t\t\t\n\t }\n};\n"]}
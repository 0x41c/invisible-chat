{"version":3,"sources":["../src/actListLoader.js"],"names":["ActListLoader","baseActLoader","_baseActLoader","lastAct","suiteModulePath","result","actFunc","loadForSuite","unshift","loadForAct"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,a;AAEjB,6BAAiD;AAAA,YAArCC,aAAqC,uEAArB,6BAAqB;;AAAA;;AAC7C,aAAKC,cAAL,GAAsBD,aAAtB;AACH;;;;6BAEIE,O,EAASC,e,EAAiB;AAC3B,gBAAIC,SAAS,EAAb;AACA,gBAAIC,UAAU,KAAKJ,cAAL,CAAoBK,YAApB,CAAiCJ,OAAjC,EAA0CC,eAA1C,CAAd;;AAEA,mBAAOE,OAAP,EAAgB;AACZD,uBAAOG,OAAP,CAAeF,OAAf;AACAA,0BAAU,KAAKJ,cAAL,CAAoBO,UAApB,CAA+BH,OAA/B,CAAV;AACH;;AAED,mBAAOD,MAAP;AACH;;;;;;kBAhBgBL,a","file":"actListLoader.js","sourcesContent":["import BaseActLoader from './baseActLoader';\n\nexport default class ActListLoader {\n\n    constructor(baseActLoader = new BaseActLoader()) {\n        this._baseActLoader = baseActLoader;\n    }\n\n    load(lastAct, suiteModulePath) {\n        let result = [];\n        let actFunc = this._baseActLoader.loadForSuite(lastAct, suiteModulePath);\n\n        while (actFunc) {\n            result.unshift(actFunc);\n            actFunc = this._baseActLoader.loadForAct(actFunc);\n        }\n\n        return result;\n    }\n}\n"]}
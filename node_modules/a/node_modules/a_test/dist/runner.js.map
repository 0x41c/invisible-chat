{"version":3,"sources":["../src/runner.js"],"names":["cacheHelper","Runner","testLoader","load","require","suiteNameBuilder","reporter","_testLoader","_suiteNameBuilder","_reporter","entryDirPath","dirContents","readdirSync","_runTestFiles","_runSubdirs","filter","test","item","map","join","statSync","absPath","isFile","forEach","_tryRunTestFile","clear","module","e","suiteName","build","notRunnableSuite","isDirectory","run"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;IAAYA,W;;AACZ;;;;AACA;;;;;;;;;;IAEqBC,M;AAEpB,mBAE0B;AAAA,MAFdC,UAEc,uEAFD,EAAEC,MAAMC,OAAR,EAEC;AAAA,MADzBC,gBACyB,uEADN,gCACM;AAAA,MAAzBC,QAAyB;;AAAA;;AAEzB,OAAKC,WAAL,GAAmBL,UAAnB;AACA,OAAKM,iBAAL,GAAyBH,gBAAzB;AACA,OAAKI,SAAL,GAAiBH,QAAjB;AACA;;;;sBAEGI,Y,EAAc;AACjB,OAAIC,cAAc,aAAGC,WAAH,CAAeF,YAAf,CAAlB;AACA,QAAKG,aAAL,CAAmBH,YAAnB,EAAiCC,WAAjC;AACA,QAAKG,WAAL,CAAiBJ,YAAjB,EAA+BC,WAA/B;AACA;;;gCAEaD,Y,EAAcC,W,EAAa;AAAA;;AACxCA,eACEI,MADF,CACS;AAAA,WAAQ,UAASC,IAAT,CAAcC,IAAd;AAAR;AAAA,IADT,EAEEC,GAFF,CAEM;AAAA,WAAQ,eAAKC,IAAL,CAAUT,YAAV,EAAwBO,IAAxB,CAAR;AAAA,IAFN,EAGEF,MAHF,CAGS;AAAA,WAAW,aAAGK,QAAH,CAAYC,OAAZ,EAAqBC,MAArB,EAAX;AAAA,IAHT,EAIEC,OAJF,CAIU,mBAAW;AACnB,UAAKC,eAAL,CAAqBH,OAArB;AACArB,gBAAYyB,KAAZ,CAAkBC,MAAlB;AACA,IAPF;AAQA;;;kCAEeL,O,EAAS;AACxB,OAAI;AACH,SAAKd,WAAL,CAAiBJ,IAAjB,CAAsBkB,OAAtB;AACA,IAFD,CAEE,OAAOM,CAAP,EAAU;AACX,QAAIC,YAAY,KAAKpB,iBAAL,CAAuBqB,KAAvB,CAA6BR,OAA7B,CAAhB;AACA,SAAKZ,SAAL,CAAeqB,gBAAf,CAAgCF,SAAhC,EAA2CD,CAA3C;AACA;AACD;;;8BAEWjB,Y,EAAcC,W,EAAa;AAAA;;AACtCA,eACEI,MADF,CACS;AAAA,WAAQE,SAAS,cAAjB;AAAA,IADT,EAEEC,GAFF,CAEM;AAAA,WAAQ,eAAKC,IAAL,CAAUT,YAAV,EAAwBO,IAAxB,CAAR;AAAA,IAFN,EAGEF,MAHF,CAGS;AAAA,WAAW,aAAGK,QAAH,CAAYC,OAAZ,EAAqBU,WAArB,EAAX;AAAA,IAHT,EAIER,OAJF,CAIU;AAAA,WAAW,OAAKS,GAAL,CAASX,OAAT,CAAX;AAAA,IAJV;AAKA;;;;;;kBA3CmBpB,M","file":"runner.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport * as cacheHelper from './cacheHelper';\nimport realReporter from './reporter';\nimport SuiteNameBuilder from './suiteNameBuilder';\n\nexport default class Runner {\n\n\tconstructor(testLoader = { load: require },\n\t\tsuiteNameBuilder = new SuiteNameBuilder(),\n\t\treporter = realReporter) {\n\n\t\tthis._testLoader = testLoader;\n\t\tthis._suiteNameBuilder = suiteNameBuilder\n\t\tthis._reporter = reporter;\n\t}\n\n\trun(entryDirPath) {\n\t\tlet dirContents = fs.readdirSync(entryDirPath)\n\t\tthis._runTestFiles(entryDirPath, dirContents);\n\t\tthis._runSubdirs(entryDirPath, dirContents)\n\t}\n\n\t_runTestFiles(entryDirPath, dirContents) {\n\t\tdirContents\n\t\t\t.filter(item => /^when/i.test(item))\n\t\t\t.map(item => path.join(entryDirPath, item))\n\t\t\t.filter(absPath => fs.statSync(absPath).isFile())\n\t\t\t.forEach(absPath => {\n\t\t\t\tthis._tryRunTestFile(absPath);\n\t\t\t\tcacheHelper.clear(module);\n\t\t\t});\n\t}\n\n\t_tryRunTestFile(absPath) {\n\t\ttry {\n\t\t\tthis._testLoader.load(absPath);\n\t\t} catch (e) {\n\t\t\tlet suiteName = this._suiteNameBuilder.build(absPath);\n\t\t\tthis._reporter.notRunnableSuite(suiteName, e);\n\t\t}\n\t}\n\n\t_runSubdirs(entryDirPath, dirContents) {\n\t\tdirContents\n\t\t\t.filter(item => item !== 'node_modules')\n\t\t\t.map(item => path.join(entryDirPath, item))\n\t\t\t.filter(absPath => fs.statSync(absPath).isDirectory())\n\t\t\t.forEach(absPath => this.run(absPath));\n\t}\n\n}\n"]}